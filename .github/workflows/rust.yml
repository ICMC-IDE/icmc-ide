name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Netlify

    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Setup Submodules
      run: git submodule init && git submodule update
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - name: Setup wasm-pack
      uses: jetli/wasm-pack-action@v0.4.0
    - name: Build
      run: rustup default nightly &&
           rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu &&
           npm install &&
           npm run build-modules &&
           npm run build
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        if-no-files-found: error
        overwrite: true
    - name: Deploy
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}
      run: npx --package=netlify-cli netlify deploy
        
